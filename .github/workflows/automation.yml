name: automation demo

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  merge_test:
    name: Run pytest & publish Allure
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      # 1. Check out code
      - uses: actions/checkout@v4

      # 2. Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      # 3. Install Chrome, ChromeDriver, and other dependencies
      - name: Install Chrome & ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip xvfb libxi6 libgconf-2-4 \
            default-jdk wget curl
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          echo "Installed Chrome version: $CHROME_VERSION"
          wget -q "https://chromedriver.storage.googleapis.com/$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          chromedriver --version

      # 4. Create venv & install dependencies
      - name: Install Python dependencies
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # 5. Run pytest with xvfb for headless UI
      - name: Test with pytest (Selenium)
        shell: bash
        run: |
          source .venv/bin/activate
          export DISPLAY=:99
          Xvfb :99 -ac &
          pytest --alluredir=allure-results

      # 6. Add metadata to Allure
      - name: Add metadata to Allure
        if: always()
        working-directory: allure-results
        run: |
          {
            echo BUILD_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            echo GIT_BRANCH=${{ github.head_ref || github.ref_name }}
            echo GIT_COMMIT_ID=${{ github.sha }}
            echo GIT_COMMIT_MESSAGE=$(git show -s --format=%s HEAD)
            echo GIT_COMMIT_AUTHOR_NAME=$(git show -s --format='%ae' HEAD)
            echo GIT_COMMIT_TIME=$(git show -s --format=%ci HEAD)
            echo CHROME_VERSION=$(google-chrome --product-version)
          } >> environment.properties

      # 7. Generate static Allure report
      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history

      # 8. Deploy to GitHub Pages
      - name: Deploy report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-history
