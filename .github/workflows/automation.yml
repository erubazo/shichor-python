name: automation demo

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  merge_test:
    name: Run pytest & publish Allure
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      # 1) Checkout
      - uses: actions/checkout@v4

      # 2) Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      # 3) Install Google Chrome (for Selenium)
      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
      # Optional: show version for debugging
      - run: google-chrome --version

      # 4) Create venv & install deps (with writable pip cache)
      - name: Install dependencies
        shell: bash
        env:
          PIP_CACHE_DIR: ${{ runner.temp }}/pip-cache
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # 5) Run pytest under xvfb, save Allure results
      - name: Test with pytest
        shell: bash
        run: |
          source .venv/bin/activate
          mkdir -p allure-results
          # Selenium 4+ + Selenium Manager will auto-download the driver for the Chrome you installed
          xvfb-run pytest --alluredir=allure-results

      # 6) Add metadata to Allure
      - name: Add metadata to Allure
        if: always()
        run: |
          REPO_DIR="${GITHUB_WORKSPACE}"
          RESULT_DIR="allure-results"
          mkdir -p "$RESULT_DIR"
          {
            echo BUILD_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            echo GIT_BRANCH=${{ github.head_ref || github.ref_name }}
            echo GIT_COMMIT_ID=${{ github.sha }}
            echo GIT_COMMIT_MESSAGE=$(git -C "$REPO_DIR" show -s --format=%s HEAD)
            echo GIT_COMMIT_AUTHOR_NAME=$(git -C "$REPO_DIR" show -s --format='%ae' HEAD)
            echo GIT_COMMIT_TIME=$(git -C "$REPO_DIR" show -s --format=%ci HEAD)
            echo CHROME_VERSION=$(google-chrome --product-version || echo unknown)
          } >> "$RESULT_DIR/environment.properties"

      # 7) Generate static Allure report
      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_report:  allure-report
          gh_pages:       gh-pages
          allure_history: allure-history

      # 8) Publish Allure history to GitHub Pages
      - name: Deploy report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir:  allure-history
